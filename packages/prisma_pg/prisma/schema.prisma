generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id                                      Int            @id @default(autoincrement())
  chain                                   String         @db.VarChar(255)
  token_address                           String         @db.VarChar(255)
  symbol                                  String?        @db.VarChar(255)
  name                                    String?        @db.VarChar(255)
  logo                                    String?
  decimals                                Int?
  total_supply                            Decimal?
  website                                 String?
  telegram                                String?
  twitter_username                        String?        @db.VarChar(255)
  is_open_source                          Boolean?
  pool_creation_timestamp                 BigInt?
  is_honeypot                             Boolean?
  buy_tax                                 Decimal?
  sell_tax                                Decimal?
  created_at                              DateTime       @default(now())
  updated_at                              DateTime       @updatedAt
  can_mint                                Boolean?
  has_renounced_ownership                 Boolean?
  top_pools                               String?
  description                             String?
  creator_close                           Boolean?
  creator_token_status                    String?        @db.VarChar(255)
  cto_flag                                Int?
  is_show_alert                           Boolean?
  lockInfo                                Json?
  renounced                               Int?
  call_number                             Int?
  hot_level                               Int?
  rat_trader_amount_rate                  Decimal?
  average_tax                             Decimal?       @db.Decimal
  bluechip_owner_count                    Int?
  bluechip_owner_percentage               Float?
  degen_call_count                        Int?
  honeypot                                Int?
  signal_count                            Int?
  top_10_holder_rate                      Decimal?       @db.Decimal
  top_fresh_wallet_count                  Int?
  top_rat_trader_amount_percentage        Float?
  top_rat_trader_count                    Int?
  top_smart_degen_count                   Int?
  top_trader_fresh_wallet_count           Int?
  top_trader_rat_trader_amount_percentage Float?
  top_trader_rat_trader_count             Int?
  top_trader_smart_degen_count            Int?
  deploy_time                             BigInt?
  score                                   Decimal?

  gmgnSignals                             GmgnSignal[]   @relation("TokenGmgnSignals")
  hot_tokens                              HotToken[]
  tokenMetrics                            TokenMetrics[]
  tokenSecurity                           TokenSecurity? @relation("TokenTokenSecurity")
  top_buys                                TopBuys?
  top_traders                             TopTrader[]

  @@unique([chain, token_address])
  @@index([chain])
  @@index([token_address])
}

model TokenSecurity {
  id                           Int       @id @default(autoincrement())
  chain                        String    @db.VarChar(255)
  token_address                String    @db.VarChar(255)
  buy_tax                      String?
  creator_address              String?
  creator_balance              String?
  creator_percent              String?
  external_call                String?
  lp_total_supply              String?
  note                         String?
  other_potential_risks        String?
  owner_address                String?
  owner_balance                String?
  owner_change_balance         String?
  owner_percent                String?
  personal_slippage_modifiable String?
  selfdestruct                 String?
  sell_tax                     String?
  slippage_modifiable          String?
  token_name                   String?
  token_symbol                 String?
  total_supply                 String?
  trading_cooldown             String?
  trust_list                   String?
  hidden_owner                 Int?
  anti_whale_modifiable        Int?
  can_take_back_ownership      Int?
  cannot_buy                   Int?
  cannot_sell_all              Int?
  honeypot_with_same_creator   Int?
  is_airdrop_scam              Int?
  is_anti_whale                Int?
  is_blacklisted               Int?
  is_honeypot                  Int?
  is_in_dex                    Int?
  is_mintable                  Int?
  is_open_source               Int?
  is_proxy                     Int?
  is_true_token                Int?
  is_whitelisted               Int?
  lp_holder_count              Int?
  transfer_pausable            Int?
  created_at                   DateTime  @default(now())
  updated_at                   DateTime?
  holder_count                 Int?
  lock_info_rate               Decimal?  @db.Decimal(10, 2)
  top_10_holder_rate           Decimal?  @db.Decimal(10, 2)
  is_burn                      Int?
  token                        Token     @relation("TokenTokenSecurity", fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address])
  @@index([chain])
  @@index([token_address])
}

model TopBuys {
  id                      Int      @id @default(autoincrement())
  chain                   String   @db.VarChar(255)
  token_address           String   @db.VarChar(255)
  holder_count_70         Int
  hold                    Int
  bought_more             Int
  sold_part               Int
  sold                    Int
  transferred             Int
  bought_rate             Decimal
  holding_rate            Decimal
  smart_pos               Json?
  smart_count_hold        Int?
  smart_count_bought_more Int?
  smart_count_sold_part   Int?
  smart_count_sold        Int?
  smart_count_transferred Int?
  top_10_holder_rate      Decimal
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt
  token                   Token    @relation(fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address], name: "topBuysCompositeUnique")
  @@index([chain])
  @@index([token_address])
}

model TopBuysWallet {
  id                      Int      @id @default(autoincrement())
  chain                   String   @db.VarChar(255)
  token_address           String   @db.VarChar(255)
  wallet_address          String   @db.VarChar(255)
  wallet_tag              String?   @db.VarChar(255)
  created_at              DateTime @default(now())
  updated_at              DateTime? @updatedAt
  token                   Token    @relation(fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address, wallet_address], name: "topBuysWalletCompositeUnique")
  @@index([chain])
  @@index([token_address])
}

model TokenMetrics {
  id                      Int       @id @default(autoincrement())
  chain                   String    @db.VarChar(255)
  token_address           String    @db.VarChar(255)
  price                   Float?
  market_cap              Float?
  fully_diluted_valuation Float?
  liquidity               Float?
  volume_24h              Float?
  holder_count            Int?
  swaps                   Int?
  buys                    Int?
  sells                   Int?
  price_change_1h         Float?
  price_change_24h        Float?
  price_change_percent    Decimal?
  price_change_percent1h  Decimal?
  price_change_percent1m  Decimal?
  price_change_percent5m  Decimal?
  transactions_1h_buys    Int?
  transactions_1h_sells   Int?
  transactions_24h_buys   Int?
  transactions_24h_sells  Int?
  smart_buy_24h           Int?
  smart_sell_24h          Int?
  created_at              DateTime  @default(now())
  holdersUpdatedAt        DateTime?
  initial_liquidity       Float?
  liquidityUpdatedAt      DateTime?
  pair_address            String?   @db.VarChar(255)
  reserve                 Float?
  tx_count                Int?
  timestamp               BigInt?
  token                   Token     @relation(fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address, timestamp])
  @@index([chain, token_address, timestamp])
  @@index([timestamp])
}

model HotToken {
  id             Int      @id @default(autoincrement())
  chain          String   @db.VarChar(255)
  token_address  String   @db.VarChar(255)
  hour_timestamp DateTime
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  token          Token    @relation(fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address, hour_timestamp])
  @@index([chain, token_address, hour_timestamp])
  @@index([hour_timestamp])
}

model TopTrader {
  id                     Int       @id @default(autoincrement())
  chain                  String    @db.VarChar(255)
  token_address          String    @db.VarChar(255)
  wallet_address         String    @db.VarChar(255)
  realized_profit        Decimal?
  unrealized_profit      Decimal?
  profit                 Decimal?
  profit_change          Decimal?
  buy_amount             Decimal?
  buy_amount_cur         Decimal?
  sell_amount            Decimal?
  sell_amount_cur        Decimal?
  buy_tx_count           Int?
  buy_tx_count_cur       Int?
  sell_tx_count          Int?
  sell_tx_count_cur      Int?
  last_trade_at          DateTime?
  addr_type              Int?
  amount_cur             Decimal?
  usd_value              Decimal?
  cost_cur               Decimal?
  sell_amount_percentage Decimal?
  sell_volume_cur        Decimal?
  buy_volume_cur         Decimal?
  netflow_usd            Decimal?
  netflow_amount         Decimal?
  wallet_tag_v2          String?   @db.VarChar(255)
  eth_balance            String?
  sol_balance            String?
  trx_balance            String?
  balance                String?
  amount_percentage      Decimal?
  unrealized_pnl         Decimal?
  avg_cost               Decimal?
  avg_sold               Decimal?
  accu_amount            Decimal?
  accu_cost              Decimal?
  cost                   Decimal?
  total_cost             Decimal?
  name                   String?
  avatar                 String?
  twitter_username       String?   @db.VarChar(255)
  twitter_name           String?   @db.VarChar(255)
  tags                   String[]
  maker_token_tags       String[]
  tag_rank               Json?
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt
  hour_timestamp         DateTime
  token                  Token     @relation(fields: [chain, token_address], references: [chain, token_address])

  @@unique([chain, token_address, wallet_address], name: "topTraderCompositeUnique")
  @@index([chain])
  @@index([token_address])
  @@index([wallet_address])
}

model SmartWallet {
  id                       Int              @id @default(autoincrement())
  source                   String?          @db.VarChar(255)
  wallet_address           String           @unique @db.VarChar(255)
  chain                    String           @db.VarChar(255)
  realized_profit          Decimal?
  buy                      Int              @default(0)
  sell                     Int              @default(0)
  last_active              Decimal?
  realized_profit_1d       Decimal?
  realized_profit_7d       Decimal?
  realized_profit_30d      Decimal?
  pnl_30d                  Decimal?
  pnl_7d                   Decimal?
  pnl_1d                   Decimal?
  txs_30d                  Int?
  buy_30d                  Int?
  sell_30d                 Int?
  eth_balance              String?
  sol_balance              String?
  trx_balance              String?
  balance                  String?
  twitter_username         String?          @db.VarChar(255)
  avatar                   String?
  ens                      String?          @db.VarChar(255)
  tag_rank                 Json?
  tags                     String[]
  maker_avatar_color       String?          @db.VarChar(255)
  twitter_name             String?          @db.VarChar(255)
  followers_count          Int              @default(0)
  is_blue_verified         Boolean          @default(false)
  twitter_description      String?
  avg_hold_time            Decimal?
  winrate_7d               Decimal?
  avg_cost_7d              Decimal?
  pnl_lt_minus_dot5_num_7d Int              @default(0)
  pnl_minus_dot5_0x_num_7d Int              @default(0)
  pnl_lt_2x_num_7d         Int              @default(0)
  pnl_2x_5x_num_7d         Int              @default(0)
  pnl_gt_5x_num_7d         Int              @default(0)
  daily_profit_7d          Json?
  recent_buy_tokens        Json?
  txs                      Int              @default(0)
  score                    Decimal?         @default(0)

  created_at               DateTime         @default(now())
  updated_at               DateTime         @updatedAt
  wallet_activities        WalletActivity[]

  @@unique([chain, wallet_address], name: "smartWalletChainWalletAddressUnique")
  @@index([wallet_address])
}

model WalletActivity {
  id                    Int          @id @default(autoincrement())
  wallet_address        String       @db.VarChar(255)
  chain                 String       @db.VarChar(255)
  tx_hash               String       @db.VarChar(255)
  timestamp             BigInt?
  event_type            String       @db.VarChar(255)
  token_address         String       @db.VarChar(255)
  token                 Json?
  token_amount          String?      @db.VarChar(255)
  quote_amount          String?      @db.VarChar(255)
  cost_usd              Float?
  buy_cost_usd          Float?
  price                 Float?
  price_usd             Float?
  is_open_or_close      Int?
  quote_address         String       @db.VarChar(255)
  quote_token           Json?
  from_address          String?      @db.VarChar(255)
  from_is_contract      Boolean?
  to_address            String?      @db.VarChar(255)
  to_is_contract        Boolean?
  balance               String?      @db.VarChar(255)
  sell_30d              Int?
  last_active_timestamp Int?
  smartWalletId         Int?
  SmartWallet           SmartWallet? @relation(fields: [smartWalletId], references: [id])

  @@unique([chain, wallet_address, tx_hash], name: "walletActivityChainTxHashUnique")
  @@index([wallet_address])
  @@index([tx_hash])
  @@index([token_address])
  @@index([quote_address])
}

model GmgnSignal {
  id                Int             @id @default(autoincrement())
  timestamp         BigInt
  source            String          @default("gmgn_web") @db.VarChar(255)
  signal_id         Int?            @unique
  maker             String?
  token_address     String          @db.VarChar(255)
  chain             String          @db.VarChar(255)
  token_price       Decimal?
  from_timestamp    BigInt?
  updated_at        DateTime?        @updatedAt
  buy_duration      Int?
  buy_usd           Decimal?
  tx_count          Int?
  signal_type       String?         @db.VarChar(255)
  smart_buy         Int?
  smart_sell        Int?
  signal_1h_count   Int?
  score             Decimal?

  first_entry_price Decimal?
  price_change      Float?
  link              Json?
  recent_buys       Json?
  is_first          Boolean         @default(true)
  created_at        DateTime        @default(now())
  token_symbol      String?         @db.VarChar(255)
  
  ExecutedSignal    ExecutedSignal?
  raw_data          Json?
  token             Token           @relation("TokenGmgnSignals", fields: [chain, token_address], references: [chain, token_address])
  UserOrder         UserOrder[]
  occurrence_count  Int?             @default(1)
  last_occurrence   DateTime        @default(now())

  @@unique([source, chain, token_address, signal_type, timestamp], name: "gmgnSignalUnique")  // 修改此行

  @@index([chain, token_address])
  @@index([source, chain, token_address])
  @@index([last_occurrence])
}

model ExecutedSignal {
  id            Int        @id @default(autoincrement())
  signal_id     Int        @unique
  executed_at   DateTime?  @default(now()) @db.Timestamp(6)
  chain         String?    @db.VarChar(255)
  token_address String?    @db.VarChar(255)
  status        String     @default("pending") @db.VarChar(255)
  GmgnSignal    GmgnSignal @relation(fields: [signal_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([token_address, chain], map: "uq_token_chain")
}

model UserOrder {
  id             Int        @id @unique @default(autoincrement())
  signal_id      Int
  user_id        String?    @db.VarChar(255)
  executed_at    DateTime?  @default(now()) @db.Timestamp(6)
  chain          String?    @db.VarChar(255)
  token_address  String?    @db.VarChar(255)
  status         String     @default("pending") @db.VarChar(255)
  enter_price    Decimal?
  holder_count   Int?
  user_name      String?    @db.VarChar(255)
  order_metadata Json?
  created_at     DateTime?  @default(now())
  updated_at     DateTime   @updatedAt
  GmgnSignal     GmgnSignal @relation(fields: [signal_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, chain, token_address], map: "uq_user_order_chain")
}

model groups {
  id         Int       @id @default(autoincrement())
  chat_id    BigInt    @unique
  title      String    @db.VarChar
  added_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)

  @@index([id], map: "ix_groups_id")
}
